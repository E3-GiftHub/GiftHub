// https://dbdiagram.io/d/GiftHub-database-68038bc91ca52373f5920a71

ENUM Status {
  PENDING
  ACCEPTED
  // REJECTED: if rejected => delete row
}

ENUM PriorityType {
  LOW
  MEDIUM
  HIGH
}

ENUM MarkType {
  PURCHASED
  RESERVED
  CONTRIBUTED
  // NULL: if null => delete row
}

TABLE User {
  id STRING [pk]
  email STRING
  fname STRING
  lname STRING
  password STRING
  iban iban
  pictureUrl STRING

  emailVerified DATETIME
  createdAt DATETIME
  updatedAt DATETIME
}

TABLE Event {
  id uuid [pk]
  title STRING
  description text
  location STRING
  date date
  time time
  pictureUrl STRING

  createdBy STRING [ref: > User.id]
  createdAt DATETIME
  updatedAt DATETIME
}

TABLE Invitation {
  id uuid [pk]
  guestId STRING [ref: > User.id]
  eventId uuid [ref: > Event.id]

  status status // 'pending', 'accepted', 'declined'
  createdAt DATETIME
  repliedAt DATETIME
}

TABLE Media {
  id uuid [pk]
  uploaderId STRING [ref: > User.id]
  eventId uuid [ref: > Event.id] // Directly linked to the event

  url STRING
  caption text

  mediaType STRING // 'image', 'video'
  fileType STRING
  fileSize int
  uploadedAt DATETIME
}

TABLE Mark {
  id uuid [pk]
  markerId STRING [ref: > User.id]
  eventId uuid [ref: > Event.id]
  articleId uuid [ref: > ItemSeller.id]

  type STRING // 'reserved', 'contributing'
  createdAt DATETIME

  Note: "Indicates a user has marked an item in the context of an event"
}

// Junction TABLE for event-specific wishlist entry - represents wishlists
TABLE EventArticle {
  eventId uuid [ref: > Event.id]
  itemId uuid [ref: > ItemSeller.id]
  quantityRequested int
  quantityFulfilled int
  priority status // low, medium, high
  createdAt DATETIME
  updatedAt DATETIME

  Note: "Composite primary key on (eventId, itemId)"
  indexes {
    (eventId, itemId) [pk]
  }

}

/// unique for the Event
TABLE ItemCustom {
  id INTEGER PK
  name STRING
  description STRING
  imagesUrl STRING
  price DECIMAL

  eventId INTEGER [ref: > Event.id]
  createdAt DATETIME
  updatedAt DATETIME
}

TABLE ItemSeller {
  id INGETER PK
  name STRING
  description STRING
  imagesUrl STRING
  price DECIMAL

  retailerId INTEGER [ref: > Retailer.id, null]
  retailerUrl STRING

  createdAt DATETIME
  updatedAt DATETIME
}

TABLE Retailer {
  id uuid [pk]
  name STRING
  apiUrl STRING
}

TABLE Contribution {
  id uuid [pk]
  contributorId STRING [ref: > User.id]
  eventId uuid [ref: > Event.id]
  articleId uuid [ref: > ItemSeller.id]

  cashAmount DECIMAL
  contributedAt DATETIME

  Note: "References EventArticles via (eventId, itemId)"
}

TABLE UserReport {
  id uuid [pk]
  reportedId STRING [ref: > User.id]
  reportedBy STRING [ref: > User.id]
  reason STRING
  description text
  reportedAt DATETIME
}

TABLE EventReport {
  id uuid [pk]
  reportedId uuid [ref: > Event.id]
  reportedBy STRING [ref: > User.id]
  reason STRING
  description text
  reportedAt DATETIME
}
